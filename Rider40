
This what i have currently figured out about the Rider40 device.


To read the data from the device one can use the SCSI Read(10) command.

You can read more about the commands at Wikipedia:
http://en.wikipedia.org/wiki/SCSI_command

To read the correct data the reserved byte nr. 7 in the
SCSI Read(10) command needs to be set to 0x10.
Changing this value will return different data:

Read(10) with various values for byte nr. 7:

0x03 - Read Serial number
0x0b - Read Firmware (I think)
0x0d - Read Firmware (I think)
0x10 - Read gps data, sensor data, planned trip...


See dump.py for example how to read from the device in python.






Offset 0x0 - 0x6000:


This seems to be some kind of log of the latest changes.
I'm not exactly sure what the purpose of this is.


In these tables the first value is the offset in hex, the second value
is the number of bytes from the offset to read as a decimal number.


Repeating blocks of 256 bytes
==========================
 Bytes  | Type | Description
----------------------------
00    2 | UI16 | Constant value of 0xAAFF ?
----------------------------
02   64 |      | Unknown, mostly 0xFF values but sometimes one byte
        |      | have different value
----------------------------
42    2 | UI16 | Unknown, related to POI, possibly space left for POI's?
----------------------------
44    4 | UI32 | Offset to start of a POI
----------------------------
48    4 | UI32 | Offset to end of a last POI
----------------------------
4C    4 | UI32 | Size left for Bryton Workouts and Tests
----------------------------
50    4 | UI32 | Offset to start Bryton Workouts and Tests
----------------------------
54    4 | UI32 | Offset to end Offset to start Bryton Workouts and Tests
----------------------------
58    4 | UI32 | ? Space left for tracks?
----------------------------
5C    4 | UI32 | Offset to the first track in track list
----------------------------
60    4 | UI32 | Offset to the end of the last track in the history
----------------------------
64    4 |      | space left for laps
----------------------------
68    4 | UI32 | Offset to the start of the first lap in the history
----------------------------
6C    4 | UI32 | Offset to the start of a last lap in the history
----------------------------
70    4 |      | Space left for workouts
----------------------------
74    4 | UI32 | Offset to start of workout descriptions
----------------------------
78    4 | UI32 | Offset to end of of workout descriptions
----------------------------
7C    4 |      | Space left for workout log data
----------------------------
80    4 | UI32 | Offset to start of data related to workouts (Interval logs?)
----------------------------
84    4 | UI32 | Offset to end of data related to workouts (Interval logs?)
----------------------------
88    4 |      | Unknown, possibly number of bytes left for trackpoints
----------------------------
8C    4 | UI32 | Offset to start of the GPS trackpoints
----------------------------
90    4 | UI32 | Offset to start of a GPS trackpoint
----------------------------
94    4 |      | Unknown, possibly number of bytes left for logpoints
----------------------------
98    4 | UI32 | Offset to start of logpoints from sensors (hr, cadence, ...)
----------------------------
9C    4 | UI32 | Offset to start of a logpoint
----------------------------
A0    4 |      | space left for settings for tracks
----------------------------
A4    4 | UI32 | Offset to start of settings for each track
----------------------------
A8    4 | UI32 | Offset to end of of settings for each track
-----------------------------------------------------
AC    4 | UI32 | Offset to start of unknown data
----------------------------
B0    4 | UI32 | Offset to start of some gps data? (Not Always)
----------------------------
B4    4 | UI32 | Offset to start of some log data? (Not Always)
----------------------------
B8    4 | UI32 | Offset to start of a lap? (Not Always)
----------------------------
BC    4 |      | Unknown
----------------------------
C0    4 | UI32 | Offset to start of a POI
-----------------------------------------------------
C4    4 |      | Unknown
-----------------------------------------------------
C8    4 | UI32 | Offset to start of track in tracklist
-----------------------------------------------------
CC   20 |      | Unknown
-----------------------------------------------------
E0   32 |      | Unknown, nothing? only 0xff
-----------------------------------------------------









POI Data, Offset 0x6154
============================
 Bytes  | Type | Description
----------------------------
00    4 | UI32 | Count of saved POI
----------------------------
04    4 |      | Unknown
----------------------------
08    4 | UI32 | Absolute offset to start of last POI
----------------------------
0C   16 |      | Empty Only 0xFF


Then there is a list of the POI's.

Each POI:
============================
 Bytes  | Type | Description
----------------------------
00    4 | I32  | Longitude. Devide by 1000000 to get value.
----------------------------
04    4 | I32  | Latitude. Devide by 1000000 to get value.
----------------------------
08    4 |      | Unknown
----------------------------
0C    4 | UI32 | This seems to be the total number of bytes the POI's above
        |      | and including the current one are using.
        |      | In the last POI this value is 0xffffff and are filled in
        |      | when a new POI is added
----------------------------
10   10 |      | Unknown
----------------------------
1a    2 | UI16 | The length of the name of the POI
----------------------------
1c    8 |      | String "ENG" and rest is 0.
        |      | Maybe is changes if device use different language?
----------------------------
24      | STR  | A string with the length of the value in 1a offset.
----------------------------











Track List,  Offset 0x7AC86


This contains track history and planned trips.
The name of the planned trips are stored as image data.

Track list header
============================
 Bytes  | Type | Description
----------------------------
00    4 | UI32 | Unknown, maybe the number of bytes before the tracklist begins
----------------------------
04    4 |      | Unknown
----------------------------
08    2 | UI16 | Number of tracks in list
----------------------------
0A    2 |      | Unknown, Always 0xFFFF ?
----------------------------
0C    4 | UI32 | Absolute Offset to the start of last track
        |      | Seems to only be used for history tracks, not planned
        |      | trips. And only if there is more than 1 track in the
        |      | history. Else it is filled with 0xFF
----------------------------
10    8 |      | Unknown, Filled with 0xFF ?
----------------------------


Then the tracks follows:

Track
============================
 Bytes  | Type | Description
----------------------------
00    4 | UI32 | Timestamp, start of track.
        |      | If this is filled with 0xFF i think it's a planned trip.
----------------------------
04    1 |      | Unknown, related to bike type or bike profile.
----------------------------
05    1 | UI8  | This is the biketype that was set in the bike profile
        |      | when this ride was recorded.
        |      | Devide by 16 to get value for bdx files.
----------------------------
06    2 | UI16 | The weight that was set in the user profile when this ride
        |      | was recorded. Devide by 100 to get value in Kg
----------------------------
08    4 | UI32 | Relative offset from the top of the gps trackpoints
        |      | to start of this tracks gps trackpoints.
----------------------------
0C    4 | UI32 | ? Relative offset from the top of the lap list to
        |      | the last lap in this track.
        |      | Filled with 0xFF for planned trips
----------------------------
10    4 | UI32 | ? Relative offset from the top of the lap list to
        |      | the first lap in this track.
        |      | Filled with 0xFF for planned trips
----------------------------
14    4 | UI32 | ? Relative offset from top of settings data starting at
        |      | offset 0x167000
        |      | Filled with 0xFF for planned trips
----------------------------
18    1 | UI8  | ? Lap count?
----------------------------
19    3 |      | Unknown
----------------------------
1C    4 | UI32 | This seems to be the total number of bytes the tracks above
        |      | and including the current one are using.
        |      | In the last track this value is 0xffffff and are filled in
        |      | when a new tracks is added
----------------------------
20    6 |      | Unknown
----------------------------
26    2 | UI16 | Length of the string below
----------------------------
28    8 |      | A string "ENG" (padded with 0?, but i have seen other values)
----------------------------
30      | STR  | A string with the length from offset 26.
        |      | For planned trips this is the uncompressed data for a
        |      | png image. See description of "Image" below.










Summary of laps and tracks, Offset 0x83000

This is a summary of the laps and also a
summary of the whole ride. The last summary in a group of laps
is the summary for the whole ride.

Repeating from offset 0x83000
============================
 Bytes  | Type | Description
----------------------------
00    4 | UI32 | Timestamp, start of lap or ride.
----------------------------
04    4 | UI32 | Timestamp, end of lap or ride.
----------------------------
08    4 | UI32 | Total distance in meters.
----------------------------
0C    1 | UI8  | Avg Speed. Calculated by
        |      | value / 8 * 60 * 60 / 1000 = speed in kph
----------------------------
0D    1 | UI8  | Max Speed. Calculated by
        |      | value / 8 * 60 * 60 / 1000 = speed in kph
----------------------------
0E    1 | UI8  | Avg heart rate.
----------------------------
0F    1 | UI8  | Max heart rate.
----------------------------
10    1 | UI8  | Avg cadence.
----------------------------
11    1 | UI8  | Max cadence.
----------------------------
12    1 | UI8  | Avg power.
----------------------------
13    1 | UI8  | Max power.
----------------------------
14    2 |      | Unknown, maybe power uses 2 bytes for each?
----------------------------
16    2 | UI16 | Altitude gain in meters.
----------------------------
18    2 | UI16 | Altitude loss in meters.
----------------------------
1A    2 | UI16 | Calories
----------------------------
1C    4 | UI32 | Ride time in seconds. The time you have been moving.
----------------------------
20   24 |      | Unknown, seems to be filled with 0
----------------------------
















GPS trackpoints Offset 0xAB000
==============================
 Bytes  | Type | Description
------------------------------
00    4 | UI32 | Maybe the number of bytes before the tracklist begins,
        |      | Including this 4 bytes.
------------------------------
04   20 |      | Unknown, Seems to be filled with 0xFF
------------------------------


Then the trackpoints follows

The trackpoints are stored in segments. 
A new segment is created when the track is paused
either by the pause button or automatically if the device is
not moving for a period of time.

In the first segment of a track the coordinates and elevation
is filled with 0xFF. And it contains 0 track points.
I'm not sure if this is always true, but all the tracks
on my device has started this way.

(When a Planned Trip is stored, the values below may not be valid. I
haven't checked.)


GPS track point segment header
==============================
00    4 | UI32 | Timestamp, start of track
------------------------------
04    4 | I32  | Longitude at start. Devide by 1000000 to get value.
------------------------------
08    4 | I32  | Latitude at start. Devide by 1000000 to get value.
------------------------------
0C    4 | I32  | Longitude at end. Devide by 1000000 to get value.
------------------------------
10    4 | I32  | Latitude at end. Devide by 1000000 to get value.
------------------------------
14    2 | UI16 | Elevation at start. Subtract 4000 from the value
        |      | and then devide by 4 to get the value in meters.
------------------------------
16    2 | UI16 | Elevation at end (i think).
        |      | Subtract 4000 from the value
        |      | and then devide by 4 to get the value in meters.
------------------------------
18    2 |      | Propably what format the trackpoints are stored in.
------------------------------
1A    1 | UI8  | The segment type. Not completely sure about this.
------------------------------
1B    1 |      | Probably related to segment type.
------------------------------
1C    4 | UI32 | Relative offset from the start of the first
        |      | track points to the end of this segment. (start of next segment)
        |      | For the last segment in a track it's filled with 0xFF
------------------------------
20    4 | UI32 | Count of the number of trackpoints in this track
------------------------------
24    4 | UI32 | Relative offset from the top of the logpoint to the
        |      | start of this segments logpoints.
------------------------------


Segment types: (Not completely sure about this.)

0:
  This seems to be used when the device is starting to record
  after a pause or it is first started, but is still not moving.
  It will record logpoints but no trackpoints.
  This lasts until the device starts moving.
  This is recorded as breaktype 0 in the bdx files.

1:
  This seems to be used for a segment that is recorded until
  the device stops moving and a autopause is started.
  This is recorded as breaktype 1 in the bdx files.

2:
  This seems to be used for a segment that is recorded until
  the device is paused manually with the button on the device.
  This is recorded as breaktype 2 in the bdx files.

3:
  This seems to be used for the last segment.
  This lasts until the end of the track
  without any breaks.
  This is recorded as breaktype 3 in the bdx files.



Then each track points follows

GPS track point (6 bytes)
============================
 Bytes  | Type | Description
----------------------------
00    1 | I8   | I'm not sure what this value is but it is used to
        |      | calculate the time of the track point.
        |      | Devide this value by 4 to get the number of 
        |      | seconds since the last track point.
------------------------------
01    1 | I8   | Elevation difference since last point.
        |      | Devide by 10 to get value in meters.
------------------------------
02    2 | I16  | Longitude difference from the last point.
        |      | This value is added to the start longitude from
        |      | the header above and saved for the next point.
------------------------------
04    2 | I16  | Latitude difference from the last point.
        |      | This value is added to the start latitude from
        |      | the header above and saved for the next point.
------------------------------















Log points Offset 0x121000
==============================
 Bytes  | Type | Description
------------------------------
00    4 | UI32 | Maybe the number of bytes before the list begins,
        |      | Including this 4 bytes.
------------------------------
04   20 |      | Unknown, Seems to be filled with 0xFF
------------------------------


Then the logpoints follows

The logpoints are stored in segments. 
A new segment is created when the track is paused
either by the pause button or automatically if the device is
not moving for a period of time.


Logpoint segment header
============================
 Bytes  | Type | Description
----------------------------
00    4 | UI32 | Timestamp, start of lap
------------------------------
04    4 |      | Unknown, seems to be filled with 0xFF
------------------------------
08    2 |      | Logpoint format. See below.
------------------------------
0A    2 | UI16 | Count of the number of logpoints in this lap
------------------------------
0C    1 | UI8  | The segment type. Not completely sure about this.
------------------------------
0D    3 |      | Unknown, related to segment type.
------------------------------

Segment types: (Not completely sure about this.)

0x02:
  Same as type 0 for the trackpoints.

0x06:
  Same as type 1 for the trackpoints.
  But it will continue to record into this segment
  until it starts moving again. Then a segment 
  type 0x02070A00 may be started.

0x0A:
  Same as type 2 for the trackpoints.

0x0E:
  Same as type 3 for the trackpoints.





Logpoint format:

It seems like there is atleast three different formats
for storing the logpoints. It probably depends on what kind of
sensors are used. It is probably atleast one format more for storing
power data.

0x7104:
  Stores: speed, temperature, airpressure, 1 uknown

0x7504:
  Stores: speed, unknown, temperature, airpressure, unknown.

0x7704:
  Stores: speed, temperature, airpressure, heartrate,
          cadence, 1 unknown.





Then each logpoint in the segment follows.

The time of the first logpoint is the start time above.
For all the other logpoints +4 seconds is added for each
logpoint. 

Logpoint (Format 0x7704, 8 bytes)
============================
 Bytes  | Type | Description
----------------------------
00    1 | UI8  | This seems to be the distance traveled in the last 8 seconds.
        |      | In meters. This is used to calculate the speed.
        |      | value / 8 * 60 * 60 / 1000 = speed in kph
------------------------------
01    1 | UI8  | The cadence in rpm. 0xFF if not available.
------------------------------
02    1 | UI8  | The heart rate in bpm. 0xFF if not available.
------------------------------
03    2 | I16  | The temperature in Celcius. Devide by 10 to get the value.
------------------------------
05    2 | UI16 | The barometric pressure. Multiply by 2 to get the value.
        |      | In Pascal i think.
------------------------------
07    1 |      | Unknown
------------------------------



Logpoint (Format 0x7504, 7 bytes)
============================
 Bytes  | Type | Description
----------------------------
00    1 | UI8  | This seems to be the distance traveled in the last 8 seconds.
        |      | In meters. This is used to calculate the speed.
        |      | value / 8 * 60 * 60 / 1000 = speed in kph
------------------------------
01    1 | UI8  | Unknown, probably heartrate.
------------------------------
02    2 | I16  | The temperature in Celcius. Devide by 10 to get the value.
------------------------------
04    2 | UI16 | The barometric pressure. Multiply by 2 to get the value.
        |      | In Pascal i think.
------------------------------
06    1 |      | Unknown
------------------------------




Logpoint (Format 0x7104, 6 bytes)
============================
 Bytes  | Type | Description
----------------------------
00    1 | UI8  | This seems to be the distance traveled in the last 8 seconds.
        |      | In meters. This is used to calculate the speed.
        |      | value / 8 * 60 * 60 / 1000 = speed in kph
------------------------------
01    2 | I16  | The temperature in Celcius. Devide by 10 to get the value.
------------------------------
03    2 | UI16 | The barometric pressure. Multiply by 2 to get the value.
        |      | In Pascal i think.
------------------------------
05    1 |      | Unknown
------------------------------






OFFSET 0x167000 + 24

Various settings in user profile and bikeprofile stored for each track.

Repeating chunks of 152 bytes


Settings data (152 bytes)
============================
 Bytes  | Type | Description
----------------------------
00    4 | UI32 | Timestamp
------------------------------
04    2 | UI16 | User Weight, Devide by 100 to get value in Kg
------------------------------
06    2 |      | Unknown
------------------------------
08    2 | UI16 | User Height, Devide by 100 to get value in cm
------------------------------
0A    1 | UI8  | Bike Type and Bike Profile.
        |      | Biketype: floor(value/16) to get same value as in bdx files.
        |      | Bike profile: value % 16 to get bike profile. 0 or 1 
------------------------------
0B    1 | UI8  | Bike Weight. Devide by 10 to get value in in Kg.
------------------------------
0C    2 | UI16 | Bike Wheel Circumference in mm.
------------------------------
0E   10 |      | Unknown
------------------------------
18  128 |      | 4 zone definitions. See below.



Then 4 zone definitions follow:

Zone definition (32 bytes)
============================
00    2 | UI16 | Zone type
------------------------------
02    2 | UI16 | Maximum value in this zone. (Max HR, FTP...)
------------------------------
04   28 |      | Now 7 groups of 4 bytes follows. Each group represents a zone.
        |      | The two UI16 in each group is the low and high percentage of the
        |      | current zone.
------------------------------


Zone types:
0x71:
  Maximum heartrate. Type 1 in bdx file
0x72:
  Lactate threshold. Type 2 in bdx file
0x73:
  Maximum Aerobic Power. Type 3 in bdx file
0x74:
  Functional Threshold Power (FTP). Type 4 in bdx file.












Workout descriptions:

Starting at offset 0x9F000


Workout Interval (24 bytes)
============================
00    1 |      | Target type = (value >> 4) (HR, MHR %, LTHR %, ...)
        |      | Interval Type = value & 0xF (Warmup, Work, Cool down, ...)
------------------------------
01    1 |      | Duration type id.
------------------------------
02    2 | UI16 | Duration of the interval. This value depends on the 
        |      | duration type id. It can be seconds, meters, heartrate
        |      | and other values.
------------------------------
04    4 | UI32 | Offset from the start of the intervals to the
        |      | end of this interval. 0xffffffff for the last interval
        |      | in a workout.
------------------------------
08    5 |      | Unknown
------------------------------
0D    1 | UI8  | Minimum target value. This depends on Target type.
        |      | It can be HR, % of MHR, Speed, ...
        |      | See offset 12.
------------------------------
0E    1 | UI8  | Maximum target value. This depends on Target type.
        |      | It can be HR, % of MHR, Speed, ...
        |      | See offset 12.
------------------------------
0F    3 |      | Unknown
------------------------------
12    1 |      | This is used when one of the min/max target values
        |      | is greater than 256.
        |      | (value >> 4) * 256 + value(offset 0E) = max target value
        |      | (value & 0xF) * 256 + value(offset 0D) = min target value
------------------------------
03    5 |      | Unknown
------------------------------



Interval Types:
0 - Other
1 - Warm Up
2 - Work
3 - Steady
4 - Cool Down
5 - Recovery
6 - Sprint


Duration Types:
 0 - manual
 1 - Distance
 2 - Time
 3 - Increasing Max Heart Rate
 4 - Increasing Max Heart Rate Percentage
 5 - Decreasing Min Heart Rate
 6 - Decreasing Min Heart Rate Percentage
 7 - Calorie
10 - Increasing Max Cadence
11 - Decreasing Min Cadence
12 - Increasing Max Speed
13 - Decreasing Min Speed


Target Types:
 0 - None
 1 - Speed
 2 - Cadence
 3 - Heart Rate
 4 - Calorie
 8 - Power
 9 - MHR Percentage
10 - LTHR percentage
12 - MAP (Maximum Aerobic Power) Percentage
13 - FTP (Functional Threshold Power) Percentage












Most of the text data on the device like the name of workouts,
planned trips and descriptions are stored as images.
The data in the image is the uncompressed content of the
IDAT chunk in a png file.

The image data is stored like this:

Image
============================
 Bytes  | Type | Description
----------------------------
00    2 | UI16 | Length of the data
----------------------------
02    3 | STR  | This seems to indicate the language of the text.
        |      | This seems to be mostly "ENG".
        |      | It probably depends on the language of the device.
----------------------------
05    5 |      | Unknown, Seems to be "ff80001000" for one line images
        |      | and "ff8000F000" for multiline images.
----------------------------
0A      |      | The data of the image. The length from the value at 00
----------------------------







User Profile

OFFSET 0x1F8000

0x1F814B - Gender (0 female, 1 male)
0x1F814C - Age




OFFSET 0x1F819F :  Bike Profile 1
  4 Bytes : Bike profile 1 Ride Time
  4 Bytes : Alt Gain
  4 Bytes : ?
  4 Bytes : Alt Loss
  4 Bytes : ?












